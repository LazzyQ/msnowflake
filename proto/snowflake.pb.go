// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/snowflake.proto

package msnowflake

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdResponse) Reset()         { *m = IdResponse{} }
func (m *IdResponse) String() string { return proto.CompactTextString(m) }
func (*IdResponse) ProtoMessage()    {}
func (*IdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_086e398f62286225, []int{0}
}

func (m *IdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdResponse.Unmarshal(m, b)
}
func (m *IdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdResponse.Marshal(b, m, deterministic)
}
func (m *IdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdResponse.Merge(m, src)
}
func (m *IdResponse) XXX_Size() int {
	return xxx_messageInfo_IdResponse.Size(m)
}
func (m *IdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdResponse proto.InternalMessageInfo

func (m *IdResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *IdResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *IdResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IdResponse) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type IdRequest struct {
	Num                  uint32   `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_086e398f62286225, []int{1}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*IdResponse)(nil), "msnowflake.IdResponse")
	proto.RegisterType((*IdRequest)(nil), "msnowflake.IdRequest")
}

func init() {
	proto.RegisterFile("proto/snowflake.proto", fileDescriptor_086e398f62286225)
}

var fileDescriptor_086e398f62286225 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0xce, 0xcb, 0x2f, 0x4f, 0xcb, 0x49, 0xcc, 0x4e, 0xd5, 0x03, 0xf3, 0x85, 0xb8,
	0x72, 0xe1, 0x22, 0x4a, 0x31, 0x5c, 0x5c, 0x9e, 0x29, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x42, 0x42, 0x5c, 0x2c, 0xc9, 0xf9, 0x29, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41,
	0x60, 0xb6, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0xaa, 0x04, 0x93, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x8c, 0x2b, 0xc4, 0xc7, 0xc5, 0x94, 0x99, 0x22, 0xc1, 0xac, 0xc0, 0xa8,
	0xc1, 0x1c, 0xc4, 0x94, 0x99, 0x22, 0x24, 0xc0, 0xc5, 0x9c, 0x99, 0x52, 0x2c, 0xc1, 0xa2, 0xc0,
	0xac, 0xc1, 0x1c, 0x04, 0x62, 0x2a, 0xc9, 0x72, 0x71, 0x82, 0x4c, 0x2f, 0x2c, 0x4d, 0x2d, 0x2e,
	0x01, 0x49, 0xe7, 0x95, 0xe6, 0x82, 0xcd, 0xe6, 0x0d, 0x02, 0x31, 0x8d, 0x9a, 0x19, 0xb9, 0xb8,
	0x7c, 0x83, 0x61, 0x6e, 0x11, 0xb2, 0xe4, 0x62, 0xf3, 0x4b, 0xad, 0x28, 0xf1, 0x4c, 0x11, 0x12,
	0xd5, 0x43, 0x38, 0x51, 0x0f, 0x6e, 0x82, 0x94, 0x18, 0xba, 0x30, 0xc4, 0xd9, 0x4a, 0x0c, 0x42,
	0x56, 0x5c, 0xec, 0x10, 0xad, 0xc5, 0x24, 0xeb, 0x4d, 0x62, 0x03, 0x87, 0x8a, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x09, 0x6a, 0x56, 0x15, 0x2e, 0x01, 0x00, 0x00,
}
